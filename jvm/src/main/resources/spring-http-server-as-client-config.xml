<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
                           http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                           http://www.springframework.org/schema/util 
                           http://www.springframework.org/schema/util/spring-util-3.1.xsd">

   <!-- Resolves ${...} placeholders from client.properties -->
   <!-- Now being done in code. When do like this it looks in the jar file which is not what we want. We need
        the properties to be independent of the jar file.
   <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
      <property name="location"><value>../etc/client.properties</value></property>
   </bean>                           
   -->
   
   <bean id="requestStartupInfoProxyService"
         class="org.springframework.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
      <!-- There is no longer going to be just one Server -->
      <property name="serviceUrl">
         <value>http://${otherServerIPAddress}:${otherServerHttpPort}/smartgasServer/remoting/startupInfo</value>
      </property>
      <!-- -->
      <property name="serviceInterface">
         <value>com.cmts.common.service.RequestStartupInfoServiceI</value>
      </property>
      <property name="httpInvokerRequestExecutor">
        <ref local="httpInvokerRequestExecutor"/>
      </property>      
   </bean>   
   
   <bean id="timeProxyService"
         class="org.springframework.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
      <property name="serviceUrl">
         <value>http://${otherServerIPAddress}:${otherServerHttpPort}/smartgasServer/remoting/time</value>
      </property>
      <property name="serviceInterface">
         <value>com.cmts.common.service.TimeServiceI</value>
      </property>
      <property name="httpInvokerRequestExecutor">
        <ref local="httpInvokerRequestExecutor"/>
      </property>            
   </bean>   
   
   <bean id="requestGraphLineProxyService"
         class="org.springframework.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
      <property name="serviceUrl">
         <value>http://${otherServerIPAddress}:${otherServerHttpPort}/smartgasServer/remoting/graphLine</value>
      </property>
      <property name="serviceInterface">
         <value>com.seasoft.alarmer.common.service.RequestGraphLineServiceI</value>
      </property>
      <property name="httpInvokerRequestExecutor">
        <ref local="httpInvokerRequestExecutor"/>
      </property>            
   </bean>   

   <!-- Used by the Secondary
   -->
   <bean id="requestFailoverProxyService"
         class="org.springframework.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
      <property name="serviceUrl">
         <value>http://${otherServerIPAddress}:${otherServerHttpPort}/smartgasServer/remoting/failover</value>
      </property>
      <property name="serviceInterface">
         <value>com.cmts.common.service.PrimaryFailoverRequestServiceI</value>
      </property>
      <property name="httpInvokerRequestExecutor">
        <ref local="httpInvokerRequestExecutor"/>
      </property>            
   </bean>
   
   <bean id="userDetailsProxyService"
         class="org.springframework.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
      <property name="serviceUrl">
         <value>http://${otherServerIPAddress}:${otherServerHttpPort}/smartgasServer/remoting/userDetails</value>
      </property>
      <property name="serviceInterface">
         <value>com.seasoft.alarmer.common.domain.UserDetailsServiceI</value>
      </property>
      <property name="httpInvokerRequestExecutor">
        <ref local="httpInvokerRequestExecutor"/>
      </property>            
   </bean>   
   
   <!-- Used by the Primary
   -->
   <bean id="clientCmdProxyService"
         class="org.springframework.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
      <property name="serviceUrl">
         <value>http://${otherServerIPAddress}:${otherServerHttpPort}/smartgasServer/remoting/clientCmd</value>
      </property>
      <property name="serviceInterface">
         <value>com.cmts.common.service.ClientCmdServiceI</value>
      </property>
      <property name="httpInvokerRequestExecutor">
        <ref local="httpInvokerRequestExecutor"/>
      </property>            
   </bean>            
   

   <!-- Automatically propagates ContextHolder-managed Authentication principal
       and credentials to a HTTP invoker BASIC authentication header -->
   <bean id="httpInvokerRequestExecutor" class="org.springframework.security.remoting.httpinvoker.AuthenticationSimpleHttpInvokerRequestExecutor"/>
</beans>